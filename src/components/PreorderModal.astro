---
import ae86_5 from '../assets/gallery/ae86-5.png';
---

<div id="preorderModal" class="fixed inset-0 bg-black/80 backdrop-blur-sm hidden flex items-center justify-center z-50">
  <div class="bg-trueno-black/90 p-8 rounded-2xl max-w-md w-full mx-4 border border-trueno-white/10 shadow-2xl">
    <h2 class="text-3xl font-racing mb-6 text-trueno-white [text-shadow:_4px_4px_8px_rgb(0_0_0_/_85%)]">
      Pre-order AE86 Trueno Key Holder - $39.99
    </h2>
    
    <!-- Product image with rounded corners -->
    <div class="mb-6 overflow-hidden rounded-xl border border-trueno-white/10 shadow-lg">
      <img 
        src={ae86_5.src} 
        alt="AE86 Trueno Key Holder" 
        class="w-full h-auto object-cover aspect-video"
      >
    </div>
    
    <form id="preorderForm" action="https://formspree.io/f/mdkalynv" method="POST" class="relative">
      <div class="space-y-6">
        <div>
          <label for="name" class="block text-sm font-medium text-trueno-white/80 mb-2">Name</label>
          <input type="text" id="name" name="name" required 
                 class="mt-1 block w-full rounded-xl px-4 py-3
                 bg-gradient-to-br from-trueno-black/80 to-trueno-black/40
                 border-2 border-trueno-white/20 
                 text-trueno-white placeholder-trueno-white/30 
                 focus:border-trueno-red focus:ring-trueno-red 
                 shadow-lg shadow-black/50
                 hover:border-trueno-white/30 transition-all">
        </div>
        <div>
          <label for="email" class="block text-sm font-medium text-trueno-white/80 mb-2">Email</label>
          <input type="email" id="email" name="email" required 
                 class="mt-1 block w-full rounded-xl px-4 py-3
                 bg-gradient-to-br from-trueno-black/80 to-trueno-black/40
                 border-2 border-trueno-white/20 
                 text-trueno-white placeholder-trueno-white/30 
                 focus:border-trueno-red focus:ring-trueno-red 
                 shadow-lg shadow-black/50
                 hover:border-trueno-white/30 transition-all">
        </div>
        <div>
          <label for="quantity" class="block text-sm font-medium text-trueno-white/80 mb-2">Quantity</label>
          <input type="number" id="quantity" name="quantity" min="1" value="1" required 
                 class="mt-1 block w-full rounded-xl px-4 py-3
                 bg-gradient-to-br from-trueno-black/80 to-trueno-black/40
                 border-2 border-trueno-white/20 
                 text-trueno-white placeholder-trueno-white/30 
                 focus:border-trueno-red focus:ring-trueno-red 
                 shadow-lg shadow-black/50
                 hover:border-trueno-white/30 transition-all">
        </div>
      </div>
      <div class="mt-8 flex flex-col gap-3">
        <button type="submit" id="submitBtn"
                class="w-full px-6 py-3 bg-trueno-red text-trueno-white rounded-xl text-lg font-racing 
                hover:bg-red-700 transition-colors shadow-lg hover:shadow-xl
                [text-shadow:_2px_2px_4px_rgb(0_0_0_/_85%)]">
          Notify Me When Available
        </button>
        <button type="button" id="closeModal" 
                class="w-full px-6 py-3 bg-transparent border-2 border-trueno-white/20 rounded-xl text-base
                text-trueno-white/80 hover:bg-trueno-white/10 transition-all
                hover:border-trueno-white/30">
          Cancel
        </button>
      </div>
      
      <!-- Success message (hidden by default) -->
      <div id="successMessage" class="hidden absolute inset-0 bg-trueno-black/95 rounded-2xl flex flex-col items-center justify-center">
        <svg class="w-20 h-20 text-green-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
        <h3 class="text-2xl font-racing text-trueno-white mb-2">Thank You!</h3>
        <p class="text-trueno-white/80 text-center mb-6">We'll notify you when your AE86 key holder is ready!</p>
        <button type="button" id="closeSuccessBtn" 
                class="px-6 py-2 bg-transparent border-2 border-trueno-white/20 rounded-xl text-base
                text-trueno-white/80 hover:bg-trueno-white/10 transition-all
                hover:border-trueno-white/30">
          Close
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Loading spinner animation styles -->
<style>
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .loading-spinner {
    animation: spin 1s linear infinite;
  }
</style>

<script>
  // Google Ads conversion tracking function
  function gtag_report_conversion(url) {
    var callback = function () {
      if (typeof(url) != 'undefined') {
        window.location = url;
      }
    };
    gtag('event', 'conversion', {
      'send_to': 'AW-16940220378/E_w6COez56waENr_3I0_',
      'value': 1.0,
      'currency': 'CAD',
      'event_callback': callback
    });
    return false;
  }

  const modal = document.getElementById('preorderModal');
  const closeBtn = document.getElementById('closeModal');
  const form = document.getElementById('preorderForm');
  const submitBtn = document.getElementById('submitBtn');
  const successMessage = document.getElementById('successMessage');
  const closeSuccessBtn = document.getElementById('closeSuccessBtn');
  
  // Function to open modal
  window.openPreorderModal = () => {
    modal?.classList.remove('hidden');
  };
  
  // Close modal when clicking close button
  closeBtn?.addEventListener('click', () => {
    modal?.classList.add('hidden');
  });
  
  // Close success message when clicking close button
  closeSuccessBtn?.addEventListener('click', () => {
    successMessage?.classList.add('hidden');
    modal?.classList.add('hidden');
  });
  
  // Close modal when clicking outside
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.add('hidden');
    }
  });
  
  // Handle form submission
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Show loading state
    if (submitBtn) {
      submitBtn.disabled = true;
      submitBtn.innerHTML = `
        <svg class="loading-spinner inline-block h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Processing...
      `;
    }
    
    try {
      // Submit the form using fetch API
      const formData = new FormData(form);
      const response = await fetch(form.action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        }
      });
      
      if (response.ok) {
        // Show success message
        successMessage?.classList.remove('hidden');
        // Reset form
        form.reset();
        
        // Trigger Google Ads conversion tracking
        if (typeof gtag === 'function') {
          gtag_report_conversion();
          console.log('Conversion tracked successfully');
        }
      } else {
        // Handle error
        alert('There was a problem submitting your form. Please try again.');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('There was a problem submitting your form. Please try again.');
    } finally {
      // Reset button
      if (submitBtn) {
        submitBtn.disabled = false;
        submitBtn.innerHTML = 'Notify Me When Available';
      }
    }
  });
</script> 